Software Engineering: It is an engineering branch related to the evolution of software product using well defined scientific principles, technique and procedures.
software engineering differ from programing in the sense that software engineering is extended over the entire lifecycle of the software from conception of maintenance to emphasizing a structured and methodical of software development while programming is centered around coding only.
Software development cycle: Is a systematic and step by step approach to develop a software, it has seven phases which include Requirement, analysis, Design, Development, Testing, Deployment and Maintenance.
Agile method is about adaptability and iteractive process which allows for changes along the way while Waterfall is a linear phase by phase approach which is set in stone once started.
Requirement Engineering: Is the process of defining, document and maintaining requirements in the engineering design process. It includes processes such as feasibility study, Requirement elicitation, Requirements specification, Requirements verification and Validation, Requirement management. It involve tools like observation report, questionnaire, user cases, user stories, requirement workshop, mind mapping, roleplaying and prototyping. Its importance is that it steers the whole process of the softeware development to develop the right software but it also helps yhe software process management to meet the constraints of cost, time and resources.
Software design modularity: Refers to a logical prtitioning of the software design that allows complex software to be manageable for the purpose of implementation and maintenance. It improve maintenance and scalability by breaking down the software into independent modules in a way that you can more easily adapt, extend or replace parts of the system without affecting others.
Software Testing: Is the act of checking whether software satisfies expections, it has severals levels which includes; Unity testing of which is the process of testing individual units, the focus is on whether each unit performs according to its speicifications; Intergration testing can verify more than one components and it can be done through top down approach or bottom up; System testing it involves multiple components which are intergrated and it uses either functional or non functional type; Acceptance testing this is the last one and it is done by the end user of the product developed; Testing is important because it gives us quality assurance, helps in bugs identification, user satisfaction, cost saving, risk management and it compliance with the standards.
Version Control System: Refers to the category of software tools that makes it possible for the software team to look after the changes made to the source code. The system records all the changes made to the file or set of files so a specific version may be called later if needed; Its importance includes, managing nad protecting the source code, keeps track of all the modifications made to the code, comparing earlier versions of the code, proctect the source code from any human error and support developers workflow and not any rigid way of working. Examples includes; Github, gitlab, perforce, beanstalk, apache version, team foundation server and bitbucket.
Sofware project manager: Is a person who undertakes the responsiblity of excuting the software project. His or Her roles includes; define and setting the project scope, being aware of the phases of software development life cycle that the software would go through, good leadership skills, managing human resources, monitor progress and perfomance and doing risk analysis at every phase.
Software maintenance: Refers to the process of modifying, updating and enhancing software applications after they have been deployed or released. It has different types such as; Corrective maintenance, adaptive maintenance, preventative maintenance and perfective maintenance. Maintenance is crucial because it helps in bug fixing, adaptation to change, perfomance optimazation, security updates and legal system support.
Ethical issues that a software engineer may encounter includes; privacy concern, bias in algorithms, security vulnerability, intellectual property, envornmental impact, social impact and professional responsibility. The adherence to ethical standards includes; understand and follow codes of ethics, priotize user well being, ensure data privancy and protection, mainatin integrity and transparency, be accountable and promote ethical innovation.
Reference for my work: Books; Roger Pressman, Software Engineering: APractitioner Apreach, McGraw Hill: Ian Sommervile, Software Engineering, Addison and Wesley; Google, Youtube and AI.